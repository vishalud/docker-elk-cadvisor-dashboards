input {
  stdin { }
  #file { 
  #  path => "/opt/logstash/conf.d/input-exemple.log" 
  #  type => "syslog.elasticsearch"
  #  start_position => "beginning"
  #}
}

output {
  stdout { codec => rubydebug }
}


filter {
  #if [type] == "syslog" {

# docker run -it --rm --name logstash -p 5001:5000 -p 5001:5000/udp -v $PWD/logstash-conf:/opt/logstash/conf.d logstash:1.5.3  -f /opt/logstash/conf.d/logstash-test.conf

### Copy/paste ######################################
    

# FIRST PARSING CUT -----------------------------------------------------------------------------------------------
  #################################################
  ### haproxy logs via syslog
  #################################################    
  #   <141>Sep 23 12:47:33 haproxy[1]: Proxy https-in started.

  if [message] =~ "<\d+>\w+\s+\d+\s+\d+:\d+:\d+\s+\w+\[\d+\]: .*$" { 
      grok {
        match => { "message" => "%{SYSLOG5424PRI}%{CISCOTIMESTAMP} +(?:%{HOSTNAME:container_src}|-)\[\d\]: +%{GREEDYDATA:container_msg}" }
      }
  }  

  #################################################
  ### Container logs via docker log-driver
  #################################################
  #<27>2015-09-22T15:27:13Z vagrant-ubuntu-trusty-64 docker/20a591ad5b12[702]: Sep 22, 2015 3:27:13 PM org.elasticsearch.node.internal.InternalNode start

  else {
    grok {
      match => { "message" => "%{SYSLOG5424PRI}+(?:%{TIMESTAMP_ISO8601:syslog_time}|-) +(?:%{HOSTNAME:container_host}|-) +(\w+/%{NOTSPACE:container_src}\[\d+\]): +%{GREEDYDATA:container_msg}" }

    }
    date {
      match => [ "syslog_time", "YYYY-MM-dd'T'HH:mm:ssZ" ]
      #target => "@timestamp"
      #locale => "en"
      #timezone => "UTC"
    }
  }


# SECOND PARSING CUT ------------------------------------------------------------------------------------------------
  

  ############################################
  ### Curator logs
  ############################################
  
  if "curator" in [container_src] {
    grok {
      match => { "container_msg" => "(%{TIMESTAMP_ISO8601:curator_time}|)( %{WORD:level}|)(\s*%{GREEDYDATA:curator_msg})" }
    }
    mutate { replace => [ "@source", "curator" ] }
  }

  

### END Copy/paste ######################################

  #} # END Loop if [type] == "syslog" {
} #END filter

